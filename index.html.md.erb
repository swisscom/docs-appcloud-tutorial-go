---
title: Introduction
owner: Konstantinos Karampogias
---

<strong><%= modified_date %></strong>

This tutorial will have you deploying a Web Application based on Go in minutes.

Hang on for a few more minutes to learn how it all works, so you can make the most out of <%= vars.product_full %>.

The tutorial assumes that you have:

* An <a href="https://console.developer.swisscom.com" target="_blank"><%= vars.product_short %> account</a>
* A <a href="https://golang.org/doc/install" target="_blank">Golang development environment</a>
* (optionally) <a href="https://docs.docker.com/engine/installation/" target="_blank">Docker</a> for local testing

Furthermore, you must have a first Cloud Foundry <a href="../concepts/roles.html#orgs" target="_blank">Organization</a> and <a href="../concepts/roles.html#spaces" target="_blank">Space</a> to push your apps to. In case you don't have that yet, please follow the <a href="https://console.developer.swisscom.com" target="_blank">tutorials in the web console</a> before returning here.

In this tutorial we will deploy using a binary approach. In other words, we locally create a binary and then push only this binary to cloud.
There are multiple reasons why a binary is preferred:

1. It is best practice for projects written in Go
1. Efficient dependency management (because we handle them locally)
1. Portability is maintained

<div style="text-align:center;margin:3em;">
  <a href="./set-up.html" class="btn btn-primary">I'm ready to start</a>
</div>
