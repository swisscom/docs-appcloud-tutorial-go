---
title: Prepare the App
owner: Konstantinos
---

<strong><%= modified_date %></strong>

In this step, you will prepare a simple application that can be deployed.
Execute the following commands to clone the sample application:

<pre class="terminal">

#ensure $GOPATH is set up correctly
$go get  github.com/swisscom/cf-sample-app-go.git (?)
cd  $GOPATH/github.com/swisscom/cf-sample-app-go.git
</pre>

You now have a functioning git repository that contains a minimal web application.

Given that docker (link) is installed in the system, you can run the web app locally exactly as it would run in the cloud

<pre class="terminal">
$ make localpush
rm -f ./bin/*
GOARCH=amd64 GOOS=linux go build -ldflags "-X main.buildstamp=`date '+%Y-%m-%d_%H:%M:%S'` -X main.githash=`git rev-parse HEAD`" -o ./bin/gocf
docker run -v /Users/taakako1/gospace/src/github.com/swisscom/cf-sample-app-go/bin:/opt/bin  --env-file ./cf.env -p 4000:4000  \
                -it cloudfoundry/cflinuxfs2 /opt/bin/gocf
                2016/04/22 12:56:51 Listening at 4000
</pre>

Under the hood we execute the following steps:
1. build the binary in the amd64 architecture 
2. bring a container passing the same ENVs that the binary will have when runs in the cloud
3. run the binary

Eventually you shouldPoint you brower http://localhost:4000/ or using a the command line

<pre class="terminal">
$ curl http://localhost:4000/
hello swisscom cloud!
</pre>

*For osx system https://docs.docker.com/machine/ pick the docker machine IP

<div style="text-align:center;margin:3em;">
  <a href="./deploy.html" class="btn btn-primary">I cloned the App source</a>
</div>
