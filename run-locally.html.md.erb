---
title: Run the App Locally
owner: Konstantinos
---

<strong><%= modified_date %></strong>

Now start your application locally 
Given that docker (link) is installed in the system, you can run the web app locally exactly as it would run in the cloud

Firstly we build the binary in ELF 64-bit LSB format 
<pre class="terminal">
GOARCH=amd64 GOOS=linux go build -ldflags "-X main.buildstamp=`date '+%Y-%m-%d_%H:%M:%S'` -X main.githash=`git rev-parse HEAD`" -o ./bin/gocf
</pre>


Secondly we run binary in the a docker container.  

<pre class="terminal">
docker run -v $GOPATH/src/github.com/swisscom/cf-sample-app-go/bin:/opt/bin  --env-file ./cf.env -p 4000:4000  \
                -it cloudfoundry/cflinuxfs2 /opt/bin/gocf
                2016/04/22 12:56:51 Listening at 4000
</pre>

The env-file is being used to mock the exact ENVs variables that the binary will have available
when we execute it in the cloud. In that way we ensure that a local run  is identical to  a cloud run.

Open <a href="http://localhost:4000" target="_blank">http://localhost:3000</a> with your web browser. You should see your app running locally.

Alternatively you can use the using a the command line
<pre class="terminal">
$ curl http://localhost:4000/
hello swisscom cloud!
</pre>

*For osx system https://docs.docker.com/machine/ pick the docker machine IP

To stop the app from running locally, in the CLI, press `Ctrl+C` to exit.
Secondly we inspect the manifest.yml file located at top level dir of the project
(link https://docs.cloudfoundry.org/devguide/deploy-apps/manifest.html)

<pre class="terminal">
--$ cat manifest.yml
applications:
- name: go-demo-app
  buildpack: binary_buildpack
  memory: 256M
  instances: 1
  path: ./bin/
  command: ./gocf
</pre>

Inspect the content of the manifest, the attributes can change accoringly.
Important here is to observe the `path` attribute because indicates what will
be uploaded to the cloud, everything with that folder. In our case  there is
only a binary which was manually built. Also the name should change
accordingly, it has to be globally unique so be creative because will be part
of the URL that your app can be reached from.


<div style="text-align:center;margin:3em;">
  <a href="./push-changes.html" class="btn btn-primary">I can run my App locally</a>
</div>
